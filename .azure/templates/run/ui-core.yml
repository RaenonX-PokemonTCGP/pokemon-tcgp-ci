parameters:
  - name: azureWebhookCommitMessage  # defaults for any parameters that aren't specified
    default: '(Unknown Commit Message)'
  - name: azureWebhookCommitLink
    default: '(Unknown Webhook Commit Link)'

stages:
  - stage: Preparation
    jobs:
      - job: Info
        displayName: Trigger Info
        dependsOn: []
        steps:
          - checkout: none

          - powershell: |
              Write-Host 'Commit: ${{ parameters.azureWebhookCommitMessage }}'
              Write-Host 'Link: ${{ parameters.azureWebhookCommitLink }}'
            displayName: 'Show Trigger Info'

      - job: LintTSC
        displayName: Lint / TSC
        dependsOn: []
        steps:
          - template: /.azure/templates/checkout/ui-core.yml

          - template: /.azure/templates/setup/yarn.yml

          - template: /.azure/templates/setup/next.yml

          - script: yarn run tsc
            displayName: 'Check TypeScript'

          - script: yarn run lint
            displayName: 'Lint Source'

          - script: yarn run lint:css
            displayName: 'Lint CSS'

      - job: Test
        displayName: Test
        dependsOn: []
        steps:
          - template: /.azure/templates/checkout/ui-core.yml

          - template: /.azure/templates/setup/yarn.yml

          - script: yarn run test:ci
            displayName: 'Test Source'

      - job: Data
        displayName: Fetch Data
        dependsOn: []
        steps:
          - template: /.azure/templates/setup/git.yml

          - template: /.azure/templates/run/exporter.yml

  - stage: Build
    displayName: Build
    pool: 'Self-Hosted'
    jobs:
      - job: Build
        displayName: Build
        steps:
          - template: /.azure/templates/checkout/ui-core.yml

          - template: /.azure/templates/setup/yarn.yml

          - template: /.azure/templates/setup/next.yml

          - powershell: |
              # PS v5 Syntax (therefore no `-AsUTC` as it's for v7)
              $buildTime = $(Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
              echo "##vso[task.setvariable variable=NEXT_PUBLIC_BUILD_TIME]$buildTime"
            displayName: 'Set Build Time Variable'

          - script: yarn run build-lib
            displayName: 'Build App Libs'
            env:
              NODE_ENV: production
              MONGODB_URI: $(MONGODB_URI)

          - script: yarn run build-core
            # Adding auto-retry because node v22 might have some issues causing flaky build behavior
            # https://developercommunity.visualstudio.com/t/Getting-flaky-but-repeated-EPERM-after-u/10728241
            retryCountOnTaskFailure: 10
            displayName: 'Build App Core'
            env:
              NODE_ENV: production
              MONGODB_URI: $(MONGODB_URI)
              NEXT_PUBLIC_BUILD_TIME: $(NEXT_PUBLIC_BUILD_TIME)

          - pwsh: Remove-Item -Recurse -Force node_modules
            displayName: 'Remove Node Modules'

          - pwsh: Remove-Item -Recurse -Force .yarn/cache
            displayName: 'Remove Yarn Cache'

          - task: ArchiveFiles@2
            displayName: 'Archive Build'
            inputs:
              rootFolderOrFile: .
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(APP_FOLDER_NAME).zip'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(APP_FOLDER_NAME).zip'
              ArtifactName: '$(APP_FOLDER_NAME)-artifact'
              publishLocation: 'Container'

          - task: PowerShell@2
            displayName: 'Report DevOps Passed'
            inputs:
              filePath: $(CI_SCRIPTS_REPO_DIR)/$(CI_DISCORD_WEBHOOK_PATH)
              pwsh: true
            env:
              AZ_DEVOPS_DISCORD_WEBHOOK: $(AZ_DEVOPS_DISCORD_WEBHOOK)
              AZ_DEVOPS_TITLE: $(Build.DefinitionName) - $(Build.BuildNumber)
              AZ_DEVOPS_STATUS: $(Agent.JobStatus)
              AZ_DEVOPS_BUILD_URL: $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)
              AZ_DEVOPS_REQUESTER: $(Build.RequestedFor)
              AZ_DEVOPS_REQUESTER_ID: $(Build.RequestedForId)
              AZ_DEVOPS_QUEUED_BY: $(Build.QueuedBy)
              AZ_DEVOPS_QUEUED_BY_ID: $(Build.QueuedById)

  - stage: ReportFailure
    displayName: Report Failure
    condition: or(not(succeeded('Preparation')), not(succeeded('Build')))
    jobs:
      - job: ReportFailure
        displayName: Report Failure

        steps:
          - checkout: ci

          - task: PowerShell@2
            displayName: 'Report Failure'
            inputs:
              filePath: $(CI_DISCORD_WEBHOOK_PATH)
              pwsh: true
            env:
              AZ_DEVOPS_DISCORD_WEBHOOK: $(AZ_DEVOPS_DISCORD_WEBHOOK)
              AZ_DEVOPS_TITLE: $(Build.DefinitionName) - $(Build.BuildNumber)
              # https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml#agent-variables-devops-services
              AZ_DEVOPS_STATUS: 'Failed'
              AZ_DEVOPS_BUILD_URL: $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)
              AZ_DEVOPS_REQUESTER: $(Build.RequestedFor)
              AZ_DEVOPS_REQUESTER_ID: $(Build.RequestedForId)
              AZ_DEVOPS_QUEUED_BY: $(Build.QueuedBy)
              AZ_DEVOPS_QUEUED_BY_ID: $(Build.QueuedById)
